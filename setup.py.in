################################################################################
 # This file is part of CosTuuM
 # Copyright (C) 2019 Bert Vandenbroucke (bert.vandenbroucke@gmail.com)
 #
 # CosTuuM is free software: you can redistribute it and/or modify it under the
 # terms of the GNU Affero General Public License as published by the Free
 # Software Foundation, either version 3 of the License, or (at your option) any
 # later version.
 #
 # CosTuuM is distributed in the hope that it will be useful, but WITOUT ANY
 # WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 # A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
 # details.
 #
 # You should have received a copy of the GNU Affero General Public License
 # along with CosTuuM. If not, see <http://www.gnu.org/licenses/>.
 ###############################################################################

# setup script for CTMmodule
# this file is parsed by CMake to add information about the compiler and
# the build environment and should not be edited directly
# (instead edit setup.py.in)

# import the setuptools module for module creation
from setuptools import setup, Extension
import os
import glob
import numpy

# main module creation routine
def main():

    # set the C and C++ compilers to the ones found by CMake
    os.environ["CC"] = "@CMAKE_C_COMPILER@"
    os.environ["CXX"] = "@CMAKE_CXX_COMPILER@"

    # find all the header files in the source folder to create a dependency
    # list that ensures the module is recompiled if any of the header files
    # changes
    header_dependencies = glob.glob("@PROJECT_SOURCE_DIR@/src/*.hpp")

    # create the module
    setup(
        name="CosTuuM",
        version="1.0.0",
        description="T-matrix module",
        author="Bert Vandenbroucke",
        author_email="bert.vandenbrucke@gmail.com",
        ext_modules=[
            Extension(
                "CosTuuM",
                ["@PROJECT_SOURCE_DIR@/src/CTMModule.cpp"],
                include_dirs=[
                    "@PROJECT_SOURCE_DIR@/src",
                    "@PROJECT_BINARY_DIR@/src",
                    "@PROJECT_SOURCE_DIR@/quicksched",
                    numpy.get_include(),
                ],
                libraries=["@LIBQUICKSCHED_SHARED@"],
                library_dirs=["@PROJECT_BINARY_DIR@/lib"],
                runtime_library_dirs=["@PROJECT_BINARY_DIR@/lib"],
                depends=header_dependencies,
                extra_compile_args=["-std=c++11"],
            )
        ],
        install_requires=["numpy"],
    )


# call the main function
if __name__ == "__main__":
    main()
